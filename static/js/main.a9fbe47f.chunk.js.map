{"version":3,"sources":["hooks/useLocalStorage.js","utils/globe.js","components/Globe/Earth.js","components/Globe/Land.js","components/Globe/Marker.js","components/Globe/Path.js","components/Globe/Curve.js","components/Globe/index.js","utils/emoji.js","components/Search.js","components/Travel.js","components/Travels.js","components/Cities.js","components/Countries.js","components/Export.js","components/Import.js","components/Reset.js","components/Footer.js","components/Menu.js","components/App.js","serviceWorker.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","RADIUS","visibilityForCoordinate","t","e","n","i","width","r","parseInt","s","height","o","data","getImageData","document","createElement","getContext","canvas","drawImage","polar2Cartesian","lat","lng","rad","relAltitude","phi","Math","PI","theta","x","sin","cos","y","z","toVector","c","Vector3","timeZoneOffset","Date","getTimezoneOffset","ROTATION","Earth","rotation","args","color","Land","dots","setDots","useEffect","load","a","Promise","resolve","reject","img","Image","addEventListener","err","src","process","image","imageData","vertices","D2R","rows","abs","push","Float32Array","attach","length","attachObject","count","array","itemSize","size","Marker","city","curve","useMemo","CatmullRomCurve3","point","p","position","TYPES","trail","sail","bus","car","Path","travel","start","end","startXYZ","endXYZ","controls","d3Interpolate","geoInterpolate","type","Curve","c1","c2","arcHeight","distanceTo","controlXYZ1","controlXYZ2","CubicBezierCurve3","Globe","cities","travels","orthographic","camera","zoom","map","geonameId","id","OrbitControls","enablePan","enableRotate","autoRotate","SPECIAL_CODES_FLAGS","ENG","SCT","WLS","SPECIAL_CODES","Object","keys","countryEmoji","country","includes","emoji","countryCodeEmoji","Search","onSelect","search","setSearch","results","setResults","el","useRef","current","focus","fetchApi","axios","get","params","username","maxRows","q","response","geonames","countryCode","adminCode1","className","inputRef","minLength","debounceTimeout","placeholder","onChange","target","Array","isArray","onClick","name","adminName1","flight","faPlane","faTrain","faShip","faBus","faCar","Travel","onFinish","setType","setStart","entries","k","icon","Travels","onRemove","faAngleRight","faTimes","Cities","Countries","countries","Export","title","href","encodeURIComponent","download","faDownload","Import","setCities","setTravels","setCountries","accept","fileReader","FileReader","readAsText","files","onload","result","faUpload","confirm","faTrash","Footer","rel","CITY_FIELDS","Menu","form","setForm","show","setShow","hasCountry","cs","ts","some","faBars","pick","newCities","filter","newTravels","Reset","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9fbe47f.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n","import { Vector3 } from \"three\";\n\nconst RADIUS = 80;\n\nconst visibilityForCoordinate = (t, e, n) => {\n  const i = 4 * n.width,\n    r = parseInt(((t + 180) / 360) * n.width + 0.5),\n    s = n.height - parseInt(((e + 90) / 180) * n.height - 0.5),\n    o = parseInt(i * (s - 1) + 4 * r) + 3;\n  return n.data[o] > 90;\n};\n\nconst getImageData = (t) => {\n  const e = document.createElement(\"canvas\").getContext(\"2d\");\n  return (\n    (e.canvas.width = t.width),\n    (e.canvas.height = t.height),\n    e.drawImage(t, 0, 0, t.width, t.height),\n    e.getImageData(0, 0, t.width, t.height)\n  );\n};\n\nconst loadMap = () =>\n  new Promise((resolve, reject) => {\n    const img = new Image();\n    img.addEventListener(\"load\", () => resolve(img));\n    img.addEventListener(\"error\", (err) => reject(err));\n    img.src = `${process.env.PUBLIC_URL}/images/map.png`;\n  });\n\nconst polar2Cartesian = (lat, lng, rad = RADIUS, relAltitude = 0) => {\n  const phi = ((90 - lat) * Math.PI) / 180;\n  const theta = ((90 - lng) * Math.PI) / 180;\n  const r = rad * (1 + relAltitude);\n  return {\n    x: r * Math.sin(phi) * Math.cos(theta),\n    y: r * Math.cos(phi),\n    z: r * Math.sin(phi) * Math.sin(theta),\n  };\n};\n\nconst toVector = (lat, lng, rad, relAltitude = 0) => {\n  const c = polar2Cartesian(lat, lng, rad, relAltitude);\n  return new Vector3(c.x, c.y, c.z);\n};\n\nconst date = new Date();\nconst timeZoneOffset = date.getTimezoneOffset() || 0;\nconst timeZoneMaxOffset = 60 * 12;\nconst ROTATION = [0, Math.PI * (timeZoneOffset / timeZoneMaxOffset), 0];\n\nexport {\n  RADIUS,\n  visibilityForCoordinate,\n  getImageData,\n  loadMap,\n  polar2Cartesian,\n  toVector,\n  ROTATION,\n};\n","import React from \"react\";\nimport { RADIUS, ROTATION } from \"utils/globe\";\n\nconst Earth = () => (\n  <mesh rotation={ROTATION}>\n    <sphereBufferGeometry args={[RADIUS, 32, 32]} />\n    <meshBasicMaterial color=\"#1F2937\" />\n  </mesh>\n);\n\nexport default Earth;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  loadMap,\n  getImageData,\n  visibilityForCoordinate,\n  polar2Cartesian,\n  ROTATION\n} from \"utils/globe\";\n\nconst Land = () => {\n  const [dots, setDots] = useState([]);\n\n  useEffect(() => {\n    const load = async () => {\n      const image = await loadMap();\n      const imageData = getImageData(image);\n\n      const vertices = [];\n      const D2R = Math.PI / 180;\n      const rows = 200;\n      for (let lat = -90; lat <= 90; lat += 180 / rows) {\n        const t = Math.cos(Math.abs(lat) * D2R) * 25 * Math.PI * 2 * 2;\n        for (let r = 0; r < t; r++) {\n          const lng = (360 * r) / t - 180;\n          if (!visibilityForCoordinate(lng, lat, imageData)) continue;\n\n          const c = polar2Cartesian(lat, lng);\n          vertices.push(c.x, c.y, c.z);\n        }\n      }\n      setDots(new Float32Array(vertices));\n    };\n\n    load();\n  }, []);\n\n  return (\n    <points rotation={ROTATION}>\n      <bufferGeometry attach=\"geometry\">\n        {dots.length && (\n          <bufferAttribute\n            attachObject={[\"attributes\", \"position\"]}\n            count={dots.length / 3}\n            array={dots}\n            itemSize={3}\n          />\n        )}\n      </bufferGeometry>\n      <pointsMaterial size={1.5} color=\"#C7D2FE\" />\n    </points>\n  );\n};\n\nexport default Land;\n","import React, { useMemo } from \"react\";\nimport { CatmullRomCurve3 } from \"three\";\nimport { polar2Cartesian, RADIUS, toVector, ROTATION } from \"utils/globe\";\n\nconst Marker = ({ city }) => {\n  const { lat, lng } = city;\n\n  const curve = useMemo(() => {\n    const s = toVector(lat, lng, RADIUS);\n    const e = toVector(lat, lng, RADIUS + 5);\n\n    return new CatmullRomCurve3([s, e]);\n  }, [lat, lng]);\n\n  const point = useMemo(() => {\n    const p = polar2Cartesian(lat, lng, RADIUS + 5);\n\n    return [p.x, p.y, p.z];\n  }, [lat, lng]);\n\n  return (\n    <mesh rotation={ROTATION}>\n      <mesh>\n        <tubeBufferGeometry args={[curve, 44, 0.3, 8]} />\n        <meshBasicMaterial color=\"#FCD34D\" />\n      </mesh>\n      <mesh position={point}>\n        <sphereBufferGeometry args={[0.3, 5, 5]} />\n        <meshBasicMaterial color=\"#FCD34D\" />\n      </mesh>\n    </mesh>\n  );\n};\n\nexport default Marker;\n","import React, { useMemo } from \"react\";\nimport { CatmullRomCurve3 } from \"three\";\nimport { RADIUS, toVector, ROTATION } from \"utils/globe\";\nimport { geoInterpolate } from \"d3\";\n\nconst TYPES = {\n  trail: \"#10B981\",\n  sail: \"#06B6D4\",\n  bus: \"#F472B6\",\n  car: \"#F59E0B\",\n};\n\nconst Path = ({ travel }) => {\n  const curve = useMemo(() => {\n    const { start, end } = travel;\n\n    const startXYZ = toVector(start.lat, start.lng, RADIUS + 0.3);\n    const endXYZ = toVector(end.lat, end.lng, RADIUS + 0.3);\n\n    const controls = [startXYZ];\n\n    const d3Interpolate = geoInterpolate(\n      [start.lng, start.lat],\n      [end.lng, end.lat]\n    );\n\n    for (let i = 1; i < 6; i++) {\n      const c = d3Interpolate((1 / 7) * i);\n      controls.push(toVector(c[1], c[0], RADIUS + 0.3));\n    }\n\n    controls.push(endXYZ);\n\n    return new CatmullRomCurve3(controls);\n  }, [travel]);\n\n  return (\n    <mesh rotation={ROTATION}>\n      <tubeBufferGeometry args={[curve, 44, 0.3, 8]} />\n      <meshBasicMaterial color={TYPES[travel.type]} />\n    </mesh>\n  );\n};\n\nexport default Path;\n","import React, { useMemo } from \"react\";\nimport { CubicBezierCurve3 } from \"three\";\nimport { RADIUS, toVector, ROTATION } from \"utils/globe\";\nimport { geoInterpolate } from \"d3\";\n\nconst Curve = ({ travel }) => {\n  const curve = useMemo(() => {\n    const { start, end } = travel;\n\n    const startXYZ = toVector(start.lat, start.lng, RADIUS);\n    const endXYZ = toVector(end.lat, end.lng, RADIUS);\n\n    const d3Interpolate = geoInterpolate(\n      [start.lng, start.lat],\n      [end.lng, end.lat]\n    );\n    const c1 = d3Interpolate(0.25);\n    const c2 = d3Interpolate(0.75);\n\n    const arcHeight = startXYZ.distanceTo(endXYZ) * 0.5 + RADIUS;\n    const controlXYZ1 = toVector(c1[1], c1[0], arcHeight);\n    const controlXYZ2 = toVector(c2[1], c2[0], arcHeight);\n\n    return new CubicBezierCurve3(startXYZ, controlXYZ1, controlXYZ2, endXYZ);\n  }, [travel]);\n\n  return (\n    <mesh rotation={ROTATION}>\n      <tubeBufferGeometry args={[curve, 44, 0.3, 8]} />\n      <meshBasicMaterial color=\"#EF4444\" />\n    </mesh>\n  );\n};\n\nexport default Curve;\n","import React from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport Earth from \"./Earth\";\nimport Land from \"./Land\";\nimport Marker from \"./Marker\";\nimport Path from \"./Path\";\nimport Curve from \"./Curve\";\n\nconst Globe = ({ cities, travels }) => (\n  <Canvas orthographic camera={{ position: [0, 0, 200], zoom: 3 }}>\n    <Earth />\n    <Land />\n    {cities.map((city) => (\n      <Marker key={city.geonameId} city={city} />\n    ))}\n    {travels.map((travel) =>\n      travel.type === \"flight\" ? (\n        <Curve key={travel.id} travel={travel} />\n      ) : (\n        <Path key={travel.id} travel={travel} />\n      )\n    )}\n    <OrbitControls enablePan enableRotate autoRotate />\n  </Canvas>\n);\n\nexport default Globe;\n","import emoji from \"react-easy-emoji\";\nimport { countryCodeEmoji } from \"country-code-emoji\";\n\nconst SPECIAL_CODES_FLAGS = { ENG: \"🏴󠁧󠁢󠁥󠁮󠁧󠁿\", SCT: \"🏴󠁧󠁢󠁳󠁣󠁴󠁿\", WLS: \"🏴󠁧󠁢󠁷󠁬󠁳󠁿\" };\n\nexport const SPECIAL_CODES = Object.keys(SPECIAL_CODES_FLAGS);\n\nconst countryEmoji = (country) =>\n  SPECIAL_CODES.includes(country)\n    ? emoji(SPECIAL_CODES_FLAGS[country])\n    : emoji(countryCodeEmoji(country));\n\nexport default countryEmoji;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport emoji, { SPECIAL_CODES } from \"utils/emoji\";\n\nconst Search = ({ onSelect }) => {\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const el = useRef();\n\n  useEffect(() => el.current.focus(), []);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      try {\n        const response = await axios.get(\"https://secure.geonames.org/search\", {\n          params: { username: \"lexcast\", maxRows: 5, q: search, type: \"json\" },\n        });\n        setResults(\n          response.data.geonames.map((r) =>\n            r.countryCode === \"GB\" && SPECIAL_CODES.includes(r.adminCode1)\n              ? { ...r, countryCode: r.adminCode1 }\n              : r\n          )\n        );\n      } catch (e) {\n        setResults([]);\n        console.error(e);\n      }\n    };\n    if (search) {\n      fetchApi();\n    } else {\n      setResults([]);\n    }\n  }, [search]);\n\n  return (\n    <div className=\"flex flex-col justify-center relative\">\n      <DebounceInput\n        inputRef={el}\n        minLength={2}\n        value={search}\n        debounceTimeout={300}\n        placeholder=\"Search any place...\"\n        className=\"flex items-center h-10 px-3 rounded-full bg-gray-800 text-gray-300 focus:outline-none focus:ring\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      {Array.isArray(results) && results.length > 0 && (\n        <div className=\"top-10 ring left-0 right-0 absolute mt-4 rounded-lg bg-gray-800 overflow-hidden text-sm\">\n          {results.map((r) => (\n            <div\n              onClick={() => {\n                onSelect(r);\n                setResults([]);\n                setSearch(\"\");\n                el.current.focus();\n              }}\n              key={r.geonameId}\n              className=\"cursor-pointer px-3 py-2 flex items-center hover:bg-gray-700\"\n            >\n              {r.countryCode && (\n                <span className=\"mr-2\">{emoji(r.countryCode)}</span>\n              )}\n              <span className=\"flex-1\">{r.name}</span>\n              {r.adminName1 && (\n                <span className=\"ml-2 text-xs text-gray-400\">\n                  {r.adminName1}\n                </span>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport Search from \"./Search\";\nimport emoji from \"utils/emoji\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faShip,\n  faPlane,\n  faTrain,\n  faBus,\n  faCar,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst TYPES = {\n  flight: faPlane,\n  trail: faTrain,\n  sail: faShip,\n  bus: faBus,\n  car: faCar,\n};\n\nconst Travel = ({ onFinish }) => {\n  const [type, setType] = useState();\n  const [start, setStart] = useState();\n\n  return (\n    <div className=\"flex flex-col justify-center\">\n      {!type && (\n        <div className=\"flex items-center justify-around\">\n          {Object.entries(TYPES).map(([k, icon]) => (\n            <div\n              key={k}\n              onClick={() => setType(k)}\n              className=\"flex items-center justify-center rounded-full h-10 w-10 bg-gray-800 cursor-pointer hover:bg-gray-700\"\n            >\n              <FontAwesomeIcon icon={icon} />\n            </div>\n          ))}\n        </div>\n      )}\n      {!!type && !start && (\n        <>\n          <div className=\"flex items-center mb-2\">\n            <div className=\"text-xs mr-2 flex items-center justify-center rounded-full h-6 w-6 bg-gray-800\">\n              <FontAwesomeIcon icon={TYPES[type]} />\n            </div>\n            From:\n          </div>\n          <Search onSelect={(c) => setStart(c)} />\n        </>\n      )}\n      {!!type && !!start && (\n        <>\n          <div className=\"flex items-center mb-2\">\n            <div className=\"mr-2 flex items-center justify-center rounded-full h-6 w-6 bg-gray-800\">\n              <FontAwesomeIcon icon={TYPES[type]} />\n            </div>\n            <div className=\"flex items-center mr-2\">\n              {start.countryCode && (\n                <span className=\"mr-2\">{emoji(start.countryCode)}</span>\n              )}\n              <span>{start.name}</span>\n            </div>\n            To:\n          </div>\n          <Search\n            onSelect={(c) => {\n              onFinish(type, start, c);\n              setType();\n              setStart();\n            }}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Travel;\n","import React from \"react\";\nimport emoji from \"utils/emoji\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faPlane,\n  faTrain,\n  faShip,\n  faBus,\n  faCar,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst TYPES = {\n  flight: faPlane,\n  trail: faTrain,\n  sail: faShip,\n  bus: faBus,\n  car: faCar,\n};\n\nconst Travels = ({ travels, onRemove }) => {\n  return (\n    <>\n      <span className=\"text-xs font-medium mb-1 mt-2\">\n        TRAVELS <span className=\"text-gray-400\">({travels.length})</span>\n      </span>\n      <div className=\"text-xs max-h-24 bg-gray-800 rounded-lg overflow-y-auto\">\n        {travels.map((t) => (\n          <div\n            key={t.id}\n            className=\"group cursor-pointer px-3 py-2 flex items-center hover:bg-gray-700\"\n          >\n            <FontAwesomeIcon\n              className=\"text-xs mr-2 text-gray-400\"\n              icon={TYPES[t.type]}\n            />\n            <div className=\"flex-1 flex items-center\">\n              {[\"start\", \"end\"].map((i) => (\n                <div key={i} className=\"flex items-center\">\n                  {t[i].countryCode && (\n                    <span className=\"mr-2 flex-shrink-0\">\n                      {emoji(t[i].countryCode)}\n                    </span>\n                  )}\n                  <span className=\"flex-1\">{t[i].name}</span>\n                  {i === \"start\" && (\n                    <FontAwesomeIcon\n                      className=\"text-xs mx-2 text-gray-500\"\n                      icon={faAngleRight}\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n            <span\n              onClick={() => onRemove(t)}\n              className=\"group-hover:visible invisible text-xs\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Travels;\n","import React from \"react\";\nimport emoji from \"utils/emoji\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Cities = ({ cities, onRemove }) => {\n  return (\n    <>\n      <span className=\"text-xs font-medium mb-1 mt-2\">\n        CITIES <span className=\"text-gray-400\">({cities.length})</span>\n      </span>\n      <div className=\"text-xs max-h-24 bg-gray-800 rounded-lg overflow-y-auto\">\n        {cities.map((c) => (\n          <div\n            key={c.geonameId}\n            className=\"group px-3 py-2 flex items-center hover:bg-gray-700\"\n          >\n            {c.countryCode && (\n              <span className=\"mr-2 flex-shrink-0\">{emoji(c.countryCode)}</span>\n            )}\n            <span className=\"flex-1\">{c.name}</span>\n            <span\n              onClick={() => onRemove(c)}\n              className=\"cursor-pointer group-hover:visible invisible text-xs\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Cities;\n","import React from \"react\";\nimport emoji from \"utils/emoji\";\n\nconst Countries = ({ countries }) => {\n  return (\n    <div className=\"flex flex-wrap mb-6\">\n      {countries.map((c) => (\n        <div key={c}>{emoji(c)}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default Countries;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Export = ({ cities, travels, countries }) => (\n  <a\n    title=\"Export\"\n    className=\"flex items-center justify-center focus:outline-none focus:ring w-8 h-8 rounded bg-gray-800 hover:bg-gray-700\"\n    href={`data:text/json;charset=utf-8,${encodeURIComponent(\n      JSON.stringify({ cities, travels, countries }, null, 2)\n    )}`}\n    download=\"globetravel.json\"\n  >\n    <FontAwesomeIcon icon={faDownload} />\n  </a>\n);\n\nexport default Export;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Import = ({ setCities, setTravels, setCountries }) => {\n  const handleFile = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n\n    fileReader.onload = (e) => {\n      const data = JSON.parse(e.target.result);\n      setCities(data.cities);\n      setTravels(data.travels);\n      setCountries(data.countries);\n    };\n  };\n\n  return (\n    <label\n      title=\"Import\"\n      className=\"cursor-pointer flex items-center justify-center focus:outline-none focus:ring w-8 h-8 rounded bg-gray-800 hover:bg-gray-700\"\n    >\n      <input\n        className=\"hidden\"\n        type=\"file\"\n        accept=\"application/JSON\"\n        onChange={handleFile}\n      />\n      <FontAwesomeIcon icon={faUpload} />\n    </label>\n  );\n};\n\nexport default Import;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Import = ({ setCities, setTravels, setCountries }) => {\n  const handleReset = () => {\n    if (window.confirm(\"Do you really want to delete everything?\")) {\n      setCities([]);\n      setTravels([]);\n      setCountries([]);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleReset}\n      title=\"Reset\"\n      className=\"flex items-center justify-center focus:outline-none focus:ring w-8 h-8 rounded bg-gray-800 hover:bg-gray-700\"\n    >\n      <FontAwesomeIcon icon={faTrash} />\n    </button>\n  );\n};\n\nexport default Import;\n","import React from \"react\";\nimport emoji from \"utils/emoji\";\n\nconst Footer = () => (\n  <>\n    <div className=\"justify-end flex items-center mt-4 mb-1 text-gray-400 text-xs\">\n      Made by<span className=\"mx-1\">{emoji(\"MX\")}</span>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"text-blue-400\"\n        href=\"https://github.com/lexcast\"\n      >\n        Daniel Alejandro Cast\n      </a>\n    </div>\n    <div className=\"text-right text-gray-400 text-xs\">\n      Globetravel uses{\" \"}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"text-blue-400\"\n        href=\"https://www.geonames.org/\"\n      >\n        Geonames API\n      </a>\n    </div>\n  </>\n);\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport Search from \"./Search\";\nimport Travel from \"./Travel\";\nimport Travels from \"./Travels\";\nimport Cities from \"./Cities\";\nimport Countries from \"./Countries\";\nimport Export from \"./Export\";\nimport Import from \"./Import\";\nimport Reset from \"./Reset\";\nimport Footer from \"./Footer\";\nimport pick from \"object.pick\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst CITY_FIELDS = [\n  \"geonameId\",\n  \"name\",\n  \"countryCode\",\n  \"adminName1\",\n  \"lat\",\n  \"lng\",\n];\n\nconst Menu = ({\n  cities,\n  setCities,\n  travels,\n  setTravels,\n  countries,\n  setCountries,\n}) => {\n  const [form, setForm] = useState();\n  const [show, setShow] = useState(false);\n\n  const hasCountry = (countryCode, cs, ts) => {\n    return (\n      cs.some((c) => c.countryCode === countryCode) ||\n      ts.some(\n        (t) =>\n          t.start.countryCode === countryCode ||\n          t.end.countryCode === countryCode\n      )\n    );\n  };\n\n  const removeCity = ({ geonameId, countryCode }) => {\n    const newCities = cities.filter((c) => geonameId !== c.geonameId);\n    setCities(newCities);\n\n    if (!hasCountry(countryCode, newCities, travels)) {\n      setCountries(countries.filter((c) => c !== countryCode));\n    }\n  };\n\n  const addCity = (c) => {\n    const city = pick(c, CITY_FIELDS);\n\n    setCities([...cities, city]);\n    if (!countries.includes(city.countryCode)) {\n      setCountries([...countries, city.countryCode]);\n    }\n  };\n\n  const removeTravel = ({ id, start, end }) => {\n    const newTravels = travels.filter((t) => id !== t.id);\n    setTravels(newTravels);\n\n    if (!hasCountry(start.countryCode, cities, newTravels)) {\n      setCountries((cs) => cs.filter((c) => c !== start.countryCode));\n    }\n\n    if (!hasCountry(end.countryCode, cities, newTravels)) {\n      setCountries((cs) => cs.filter((c) => c !== end.countryCode));\n    }\n  };\n\n  const addTravel = (type, s, e) => {\n    const start = pick(s, CITY_FIELDS);\n    const end = pick(e, CITY_FIELDS);\n    const id = s.geonameId + \"_\" + e.geonameId;\n\n    setTravels([...travels, { type, start, end, id }]);\n\n    if (!countries.includes(s.countryCode)) {\n      setCountries((c) => [...c, s.countryCode]);\n    }\n\n    if (!countries.includes(e.countryCode)) {\n      setCountries((c) => [...c, e.countryCode]);\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => setShow(!show)}\n        className=\"z-20 md:hidden absolute top-0 right-0 mt-4 mr-4 focus:outline-none focus:ring rounded-full bg-gray-800 h-8 w-8 flex items-center justify-center text-gray-300 hover:bg-gray-700 font-bolt\"\n      >\n        <FontAwesomeIcon icon={show ? faTimes : faBars} />\n      </button>\n      <div\n        className={\n          \"bg-gray-900 absolute w-full md:relative flex-1 flex-col flex-nowrap px-10 pt-14 pb-4 h-screen overflow-y-auto \" +\n          (show ? \"flex\" : \"hidden md:flex\")\n        }\n      >\n        {countries.length > 0 && <Countries countries={countries} />}\n        <div className=\"flex-1\">\n          <div className=\"flex justify-around mb-8\">\n            <button\n              onClick={() => setForm(form === \"city\" ? null : \"city\")}\n              className=\"focus:outline-none focus:ring rounded-full bg-gray-800 h-8 px-4 flex items-center text-gray-300 hover:bg-gray-700 font-bolt\"\n            >\n              Add City\n            </button>\n            <button\n              onClick={() => setForm(form === \"travel\" ? null : \"travel\")}\n              className=\"focus:outline-none focus:ring rounded-full bg-gray-800 h-8 px-4 flex items-center text-gray-300 hover:bg-gray-700 font-bolt\"\n            >\n              Add Travel\n            </button>\n          </div>\n          {form === \"city\" && <Search onSelect={addCity} />}\n          {form === \"travel\" && <Travel onFinish={addTravel} />}\n        </div>\n        {cities.length > 0 && <Cities cities={cities} onRemove={removeCity} />}\n        {travels.length > 0 && (\n          <Travels travels={travels} onRemove={removeTravel} />\n        )}\n        <div className=\"mt-6 flex items-center justify-end gap-4\">\n          <Reset {...{ setCities, setTravels, setCountries }} />\n          <Import {...{ setCities, setTravels, setCountries }} />\n          <Export {...{ cities, travels, countries }} />\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\nimport Globe from \"./Globe\";\nimport Menu from \"./Menu\";\n\nconst App = () => {\n  const [cities, setCities] = useLocalStorage(\"@globetravel.cities\", []);\n  const [travels, setTravels] = useLocalStorage(\"@globetravel.travels\", []);\n  const [countries, setCountries] = useLocalStorage(\n    \"@globetravel.countries\",\n    []\n  );\n\n  return (\n    <div className=\"text-gray-300 w-screen h-screen bg-gray-900 flex overflow-hidden flex-no-wrap\">\n      <div className=\"h-screen w-full md:w-2/3 bg-gray-900\">\n        <Globe cities={cities} travels={travels} />\n      </div>\n      <Menu\n        {...{ cities, setCities, travels, setTravels, countries, setCountries }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}